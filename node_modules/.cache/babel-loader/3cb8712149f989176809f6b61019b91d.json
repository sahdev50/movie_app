{"ast":null,"code":"var VanillaTilt = function () {\n  'use strict';\n  /**\n   * Created by Sergiu È˜andor (micku7zu) on 1/27/2017.\n   * Original idea: https://github.com/gijsroge/tilt.js\n   * MIT License.\n   * Version 1.7.0\n   */\n\n  class VanillaTilt {\n    constructor(element, settings = {}) {\n      if (!(element instanceof Node)) {\n        throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\n      }\n\n      this.width = null;\n      this.height = null;\n      this.clientWidth = null;\n      this.clientHeight = null;\n      this.left = null;\n      this.top = null; // for Gyroscope sampling\n\n      this.gammazero = null;\n      this.betazero = null;\n      this.lastgammazero = null;\n      this.lastbetazero = null;\n      this.transitionTimeout = null;\n      this.updateCall = null;\n      this.event = null;\n      this.updateBind = this.update.bind(this);\n      this.resetBind = this.reset.bind(this);\n      this.element = element;\n      this.settings = this.extendSettings(settings);\n      this.reverse = this.settings.reverse ? -1 : 1;\n      this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n      this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n      this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n      this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n      this.gyroscopeSamples = this.settings.gyroscopeSamples;\n      this.elementListener = this.getElementListener();\n\n      if (this.glare) {\n        this.prepareGlare();\n      }\n\n      if (this.fullPageListening) {\n        this.updateClientSize();\n      }\n\n      this.addEventListeners();\n      this.updateInitialPosition();\n    }\n\n    static isSettingTrue(setting) {\n      return setting === \"\" || setting === true || setting === 1;\n    }\n    /**\n     * Method returns element what will be listen mouse events\n     * @return {Node}\n     */\n\n\n    getElementListener() {\n      if (this.fullPageListening) {\n        return window.document;\n      }\n\n      if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n        const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n\n        if (mouseEventElement) {\n          return mouseEventElement;\n        }\n      }\n\n      if (this.settings[\"mouse-event-element\"] instanceof Node) {\n        return this.settings[\"mouse-event-element\"];\n      }\n\n      return this.element;\n    }\n    /**\n     * Method set listen methods for this.elementListener\n     * @return {Node}\n     */\n\n\n    addEventListeners() {\n      this.onMouseEnterBind = this.onMouseEnter.bind(this);\n      this.onMouseMoveBind = this.onMouseMove.bind(this);\n      this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n      this.onWindowResizeBind = this.onWindowResize.bind(this);\n      this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n      this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n      this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n      this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n\n      if (this.glare || this.fullPageListening) {\n        window.addEventListener(\"resize\", this.onWindowResizeBind);\n      }\n\n      if (this.gyroscope) {\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n      }\n    }\n    /**\n     * Method remove event listeners from current this.elementListener\n     */\n\n\n    removeEventListeners() {\n      this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n      this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n      this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n\n      if (this.gyroscope) {\n        window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n      }\n\n      if (this.glare || this.fullPageListening) {\n        window.removeEventListener(\"resize\", this.onWindowResizeBind);\n      }\n    }\n\n    destroy() {\n      clearTimeout(this.transitionTimeout);\n\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n\n      this.reset();\n      this.removeEventListeners();\n      this.element.vanillaTilt = null;\n      delete this.element.vanillaTilt;\n      this.element = null;\n    }\n\n    onDeviceOrientation(event) {\n      if (event.gamma === null || event.beta === null) {\n        return;\n      }\n\n      this.updateElementPosition();\n\n      if (this.gyroscopeSamples > 0) {\n        this.lastgammazero = this.gammazero;\n        this.lastbetazero = this.betazero;\n\n        if (this.gammazero === null) {\n          this.gammazero = event.gamma;\n          this.betazero = event.beta;\n        } else {\n          this.gammazero = (event.gamma + this.lastgammazero) / 2;\n          this.betazero = (event.beta + this.lastbetazero) / 2;\n        }\n\n        this.gyroscopeSamples -= 1;\n      }\n\n      const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n      const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n      const degreesPerPixelX = totalAngleX / this.width;\n      const degreesPerPixelY = totalAngleY / this.height;\n      const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n      const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n      const posX = angleX / degreesPerPixelX;\n      const posY = angleY / degreesPerPixelY;\n\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n\n      this.event = {\n        clientX: posX + this.left,\n        clientY: posY + this.top\n      };\n      this.updateCall = requestAnimationFrame(this.updateBind);\n    }\n\n    onMouseEnter() {\n      this.updateElementPosition();\n      this.element.style.willChange = \"transform\";\n      this.setTransition();\n    }\n\n    onMouseMove(event) {\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n\n      this.event = event;\n      this.updateCall = requestAnimationFrame(this.updateBind);\n    }\n\n    onMouseLeave() {\n      this.setTransition();\n\n      if (this.settings.reset) {\n        requestAnimationFrame(this.resetBind);\n      }\n    }\n\n    reset() {\n      this.event = {\n        clientX: this.left + this.width / 2,\n        clientY: this.top + this.height / 2\n      };\n\n      if (this.element && this.element.style) {\n        this.element.style.transform = `perspective(${this.settings.perspective}px) ` + `rotateX(0deg) ` + `rotateY(0deg) ` + `scale3d(1, 1, 1)`;\n      }\n\n      this.resetGlare();\n    }\n\n    resetGlare() {\n      if (this.glare) {\n        this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n        this.glareElement.style.opacity = \"0\";\n      }\n    }\n\n    updateInitialPosition() {\n      if (this.settings.startX === 0 && this.settings.startY === 0) {\n        return;\n      }\n\n      this.onMouseEnter();\n\n      if (this.fullPageListening) {\n        this.event = {\n          clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n          clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n        };\n      } else {\n        this.event = {\n          clientX: this.left + (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width,\n          clientY: this.top + (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height\n        };\n      }\n\n      let backupScale = this.settings.scale;\n      this.settings.scale = 1;\n      this.update();\n      this.settings.scale = backupScale;\n      this.resetGlare();\n    }\n\n    getValues() {\n      let x, y;\n\n      if (this.fullPageListening) {\n        x = this.event.clientX / this.clientWidth;\n        y = this.event.clientY / this.clientHeight;\n      } else {\n        x = (this.event.clientX - this.left) / this.width;\n        y = (this.event.clientY - this.top) / this.height;\n      }\n\n      x = Math.min(Math.max(x, 0), 1);\n      y = Math.min(Math.max(y, 0), 1);\n      let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n      let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n      let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n      return {\n        tiltX: tiltX,\n        tiltY: tiltY,\n        percentageX: x * 100,\n        percentageY: y * 100,\n        angle: angle\n      };\n    }\n\n    updateElementPosition() {\n      let rect = this.element.getBoundingClientRect();\n      this.width = this.element.offsetWidth;\n      this.height = this.element.offsetHeight;\n      this.left = rect.left;\n      this.top = rect.top;\n    }\n\n    update() {\n      let values = this.getValues();\n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n\n      if (this.glare) {\n        this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\n        this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\n      }\n\n      this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n        \"detail\": values\n      }));\n      this.updateCall = null;\n    }\n    /**\n     * Appends the glare element (if glarePrerender equals false)\n     * and sets the default style\n     */\n\n\n    prepareGlare() {\n      // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n      if (!this.glarePrerender) {\n        // Create glare element\n        const jsTiltGlare = document.createElement(\"div\");\n        jsTiltGlare.classList.add(\"js-tilt-glare\");\n        const jsTiltGlareInner = document.createElement(\"div\");\n        jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n        jsTiltGlare.appendChild(jsTiltGlareInner);\n        this.element.appendChild(jsTiltGlare);\n      }\n\n      this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n      this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n\n      if (this.glarePrerender) {\n        return;\n      }\n\n      Object.assign(this.glareElementWrapper.style, {\n        \"position\": \"absolute\",\n        \"top\": \"0\",\n        \"left\": \"0\",\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"overflow\": \"hidden\",\n        \"pointer-events\": \"none\"\n      });\n      Object.assign(this.glareElement.style, {\n        \"position\": \"absolute\",\n        \"top\": \"50%\",\n        \"left\": \"50%\",\n        \"pointer-events\": \"none\",\n        \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n        \"width\": `${this.element.offsetWidth * 2}px`,\n        \"height\": `${this.element.offsetWidth * 2}px`,\n        \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n        \"transform-origin\": \"0% 0%\",\n        \"opacity\": \"0\"\n      });\n    }\n\n    updateGlareSize() {\n      if (this.glare) {\n        Object.assign(this.glareElement.style, {\n          \"width\": `${this.element.offsetWidth * 2}`,\n          \"height\": `${this.element.offsetWidth * 2}`\n        });\n      }\n    }\n\n    updateClientSize() {\n      this.clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      this.clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    }\n\n    onWindowResize() {\n      this.updateGlareSize();\n      this.updateClientSize();\n    }\n\n    setTransition() {\n      clearTimeout(this.transitionTimeout);\n      this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n      if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\n      this.transitionTimeout = setTimeout(() => {\n        this.element.style.transition = \"\";\n\n        if (this.glare) {\n          this.glareElement.style.transition = \"\";\n        }\n      }, this.settings.speed);\n    }\n    /**\n     * Method return patched settings of instance\n     * @param {boolean} settings.reverse - reverse the tilt direction\n     * @param {number} settings.max - max tilt rotation (degrees)\n     * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\n     * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\n     * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\n     * @param {string} settings.easing - Easing on enter/exit\n     * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\n     * @param {number} settings.speed - Speed of the enter/exit transition\n     * @param {boolean} settings.transition - Set a transition on enter/exit\n     * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\n     * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\n     * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\n     * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\n     * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\n     * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\n     * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\n     * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\n     * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\n     * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\n     */\n\n\n    extendSettings(settings) {\n      let defaultSettings = {\n        reverse: false,\n        max: 15,\n        startX: 0,\n        startY: 0,\n        perspective: 1000,\n        easing: \"cubic-bezier(.03,.98,.52,.99)\",\n        scale: 1,\n        speed: 300,\n        transition: true,\n        axis: null,\n        glare: false,\n        \"max-glare\": 1,\n        \"glare-prerender\": false,\n        \"full-page-listening\": false,\n        \"mouse-event-element\": null,\n        reset: true,\n        gyroscope: true,\n        gyroscopeMinAngleX: -45,\n        gyroscopeMaxAngleX: 45,\n        gyroscopeMinAngleY: -45,\n        gyroscopeMaxAngleY: 45,\n        gyroscopeSamples: 10\n      };\n      let newSettings = {};\n\n      for (var property in defaultSettings) {\n        if (property in settings) {\n          newSettings[property] = settings[property];\n        } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n          let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n\n          try {\n            newSettings[property] = JSON.parse(attribute);\n          } catch (e) {\n            newSettings[property] = attribute;\n          }\n        } else {\n          newSettings[property] = defaultSettings[property];\n        }\n      }\n\n      return newSettings;\n    }\n\n    static init(elements, settings) {\n      if (elements instanceof Node) {\n        elements = [elements];\n      }\n\n      if (elements instanceof NodeList) {\n        elements = [].slice.call(elements);\n      }\n\n      if (!(elements instanceof Array)) {\n        return;\n      }\n\n      elements.forEach(element => {\n        if (!(\"vanillaTilt\" in element)) {\n          element.vanillaTilt = new VanillaTilt(element, settings);\n        }\n      });\n    }\n\n  }\n\n  if (typeof document !== \"undefined\") {\n    /* expose the class to window */\n    window.VanillaTilt = VanillaTilt;\n    /**\n     * Auto load\n     */\n\n    VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n  }\n\n  return VanillaTilt;\n}();","map":{"version":3,"sources":["D:/ReactJs/movie_app/src/components/vanilla-tilt.js"],"names":["VanillaTilt","constructor","element","settings","Node","width","height","clientWidth","clientHeight","left","top","gammazero","betazero","lastgammazero","lastbetazero","transitionTimeout","updateCall","event","updateBind","update","bind","resetBind","reset","extendSettings","reverse","glare","isSettingTrue","glarePrerender","fullPageListening","gyroscope","gyroscopeSamples","elementListener","getElementListener","prepareGlare","updateClientSize","addEventListeners","updateInitialPosition","setting","window","document","mouseEventElement","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","addEventListener","removeEventListeners","removeEventListener","destroy","clearTimeout","cancelAnimationFrame","vanillaTilt","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","angleX","angleY","posX","posY","clientX","clientY","requestAnimationFrame","style","willChange","setTransition","transform","perspective","resetGlare","glareElement","opacity","startX","startY","max","backupScale","scale","getValues","x","y","Math","min","tiltX","toFixed","tiltY","angle","atan2","PI","percentageX","percentageY","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","axis","dispatchEvent","CustomEvent","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","appendChild","glareElementWrapper","Object","assign","updateGlareSize","innerWidth","documentElement","body","innerHeight","transition","speed","easing","setTimeout","defaultSettings","newSettings","property","hasAttribute","attribute","getAttribute","JSON","parse","e","init","elements","NodeList","slice","call","Array","forEach","querySelectorAll"],"mappings":"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","sourcesContent":["var VanillaTilt = (function () {\n'use strict';\n\n/**\n * Created by Sergiu È˜andor (micku7zu) on 1/27/2017.\n * Original idea: https://github.com/gijsroge/tilt.js\n * MIT License.\n * Version 1.7.0\n */\n\nclass VanillaTilt {\n  constructor(element, settings = {}) {\n    if (!(element instanceof Node)) {\n      throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\n    }\n\n    this.width = null;\n    this.height = null;\n    this.clientWidth = null;\n    this.clientHeight = null;\n    this.left = null;\n    this.top = null;\n\n    // for Gyroscope sampling\n    this.gammazero = null;\n    this.betazero = null;\n    this.lastgammazero = null;\n    this.lastbetazero = null;\n\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.event = null;\n\n    this.updateBind = this.update.bind(this);\n    this.resetBind = this.reset.bind(this);\n\n    this.element = element;\n    this.settings = this.extendSettings(settings);\n\n    this.reverse = this.settings.reverse ? -1 : 1;\n    this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n    this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n    this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n    this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n    this.gyroscopeSamples = this.settings.gyroscopeSamples;\n\n    this.elementListener = this.getElementListener();\n\n    if (this.glare) {\n      this.prepareGlare();\n    }\n\n    if (this.fullPageListening) {\n      this.updateClientSize();\n    }\n\n    this.addEventListeners();\n    this.updateInitialPosition();\n  }\n\n  static isSettingTrue(setting) {\n    return setting === \"\" || setting === true || setting === 1;\n  }\n\n  /**\n   * Method returns element what will be listen mouse events\n   * @return {Node}\n   */\n  getElementListener() {\n    if (this.fullPageListening) {\n      return window.document;\n    }\n\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n      const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n\n      if (mouseEventElement) {\n        return mouseEventElement;\n      }\n    }\n\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\n      return this.settings[\"mouse-event-element\"];\n    }\n\n    return this.element;\n  }\n\n  /**\n   * Method set listen methods for this.elementListener\n   * @return {Node}\n   */\n  addEventListeners() {\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n    this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n\n    if (this.glare || this.fullPageListening) {\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\n    }\n\n    if (this.gyroscope) {\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n    }\n  }\n\n  /**\n   * Method remove event listeners from current this.elementListener\n   */\n  removeEventListeners() {\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n    this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n\n    if (this.gyroscope) {\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n    }\n\n    if (this.glare || this.fullPageListening) {\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.transitionTimeout);\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.reset();\n\n    this.removeEventListeners();\n    this.element.vanillaTilt = null;\n    delete this.element.vanillaTilt;\n\n    this.element = null;\n  }\n\n  onDeviceOrientation(event) {\n    if (event.gamma === null || event.beta === null) {\n      return;\n    }\n\n    this.updateElementPosition();\n\n    if (this.gyroscopeSamples > 0) {\n      this.lastgammazero = this.gammazero;\n      this.lastbetazero = this.betazero;\n\n      if (this.gammazero === null) {\n        this.gammazero = event.gamma;\n        this.betazero = event.beta;\n      } else {\n        this.gammazero = (event.gamma + this.lastgammazero) / 2;\n        this.betazero = (event.beta + this.lastbetazero) / 2;\n      }\n\n      this.gyroscopeSamples -= 1;\n    }\n\n    const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n    const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n\n    const degreesPerPixelX = totalAngleX / this.width;\n    const degreesPerPixelY = totalAngleY / this.height;\n\n    const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n    const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n\n    const posX = angleX / degreesPerPixelX;\n    const posY = angleY / degreesPerPixelY;\n\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = {\n      clientX: posX + this.left,\n      clientY: posY + this.top,\n    };\n\n    this.updateCall = requestAnimationFrame(this.updateBind);\n  }\n\n  onMouseEnter() {\n    this.updateElementPosition();\n    this.element.style.willChange = \"transform\";\n    this.setTransition();\n  }\n\n  onMouseMove(event) {\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = event;\n    this.updateCall = requestAnimationFrame(this.updateBind);\n  }\n\n  onMouseLeave() {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      requestAnimationFrame(this.resetBind);\n    }\n  }\n\n  reset() {\n    this.event = {\n      clientX: this.left + this.width / 2,\n      clientY: this.top + this.height / 2\n    };\n\n    if (this.element && this.element.style) {\n      this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\n        `rotateX(0deg) ` +\n        `rotateY(0deg) ` +\n        `scale3d(1, 1, 1)`;\n    }\n\n    this.resetGlare();\n  }\n\n  resetGlare() {\n    if (this.glare) {\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n      this.glareElement.style.opacity = \"0\";\n    }\n  }\n\n  updateInitialPosition() {\n    if (this.settings.startX === 0 && this.settings.startY === 0) {\n      return;\n    }\n\n    this.onMouseEnter();\n\n    if (this.fullPageListening) {\n      this.event = {\n        clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n        clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n      };\n    } else {\n      this.event = {\n        clientX: this.left + ((this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width),\n        clientY: this.top + ((this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height)\n      };\n    }\n\n\n    let backupScale = this.settings.scale;\n    this.settings.scale = 1;\n    this.update();\n    this.settings.scale = backupScale;\n    this.resetGlare();\n  }\n\n  getValues() {\n    let x, y;\n\n    if (this.fullPageListening) {\n      x = this.event.clientX / this.clientWidth;\n      y = this.event.clientY / this.clientHeight;\n    } else {\n      x = (this.event.clientX - this.left) / this.width;\n      y = (this.event.clientY - this.top) / this.height;\n    }\n\n    x = Math.min(Math.max(x, 0), 1);\n    y = Math.min(Math.max(y, 0), 1);\n\n    let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n    let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n    let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n\n    return {\n      tiltX: tiltX,\n      tiltY: tiltY,\n      percentageX: x * 100,\n      percentageY: y * 100,\n      angle: angle\n    };\n  }\n\n  updateElementPosition() {\n    let rect = this.element.getBoundingClientRect();\n\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n\n  update() {\n    let values = this.getValues();\n\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\n      \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\n      \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\n      \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n\n    if (this.glare) {\n      this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\n      this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\n    }\n\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n      \"detail\": values\n    }));\n\n    this.updateCall = null;\n  }\n\n  /**\n   * Appends the glare element (if glarePrerender equals false)\n   * and sets the default style\n   */\n  prepareGlare() {\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n    if (!this.glarePrerender) {\n      // Create glare element\n      const jsTiltGlare = document.createElement(\"div\");\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\n\n      const jsTiltGlareInner = document.createElement(\"div\");\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n\n      jsTiltGlare.appendChild(jsTiltGlareInner);\n      this.element.appendChild(jsTiltGlare);\n    }\n\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n\n    if (this.glarePrerender) {\n      return;\n    }\n\n    Object.assign(this.glareElementWrapper.style, {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"overflow\": \"hidden\",\n      \"pointer-events\": \"none\"\n    });\n\n    Object.assign(this.glareElement.style, {\n      \"position\": \"absolute\",\n      \"top\": \"50%\",\n      \"left\": \"50%\",\n      \"pointer-events\": \"none\",\n      \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n      \"width\": `${this.element.offsetWidth * 2}px`,\n      \"height\": `${this.element.offsetWidth * 2}px`,\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n      \"transform-origin\": \"0% 0%\",\n      \"opacity\": \"0\",\n    });\n  }\n\n  updateGlareSize() {\n    if (this.glare) {\n      Object.assign(this.glareElement.style, {\n        \"width\": `${this.element.offsetWidth * 2}`,\n        \"height\": `${this.element.offsetWidth * 2}`,\n      });\n    }\n  }\n\n  updateClientSize() {\n    this.clientWidth = window.innerWidth\n      || document.documentElement.clientWidth\n      || document.body.clientWidth;\n\n    this.clientHeight = window.innerHeight\n      || document.documentElement.clientHeight\n      || document.body.clientHeight;\n  }\n\n  onWindowResize() {\n    this.updateGlareSize();\n    this.updateClientSize();\n  }\n\n  setTransition() {\n    clearTimeout(this.transitionTimeout);\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n    if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\n\n    this.transitionTimeout = setTimeout(() => {\n      this.element.style.transition = \"\";\n      if (this.glare) {\n        this.glareElement.style.transition = \"\";\n      }\n    }, this.settings.speed);\n\n  }\n\n  /**\n   * Method return patched settings of instance\n   * @param {boolean} settings.reverse - reverse the tilt direction\n   * @param {number} settings.max - max tilt rotation (degrees)\n   * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\n   * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\n   * @param {string} settings.easing - Easing on enter/exit\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\n   * @param {number} settings.speed - Speed of the enter/exit transition\n   * @param {boolean} settings.transition - Set a transition on enter/exit\n   * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\n   * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\n   * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\n   * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\n   */\n  extendSettings(settings) {\n    let defaultSettings = {\n      reverse: false,\n      max: 15,\n      startX: 0,\n      startY: 0,\n      perspective: 1000,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: 1,\n      speed: 300,\n      transition: true,\n      axis: null,\n      glare: false,\n      \"max-glare\": 1,\n      \"glare-prerender\": false,\n      \"full-page-listening\": false,\n      \"mouse-event-element\": null,\n      reset: true,\n      gyroscope: true,\n      gyroscopeMinAngleX: -45,\n      gyroscopeMaxAngleX: 45,\n      gyroscopeMinAngleY: -45,\n      gyroscopeMaxAngleY: 45,\n      gyroscopeSamples: 10\n    };\n\n    let newSettings = {};\n    for (var property in defaultSettings) {\n      if (property in settings) {\n        newSettings[property] = settings[property];\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n        let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n        try {\n          newSettings[property] = JSON.parse(attribute);\n        } catch (e) {\n          newSettings[property] = attribute;\n        }\n\n      } else {\n        newSettings[property] = defaultSettings[property];\n      }\n    }\n\n    return newSettings;\n  }\n\n  static init(elements, settings) {\n    if (elements instanceof Node) {\n      elements = [elements];\n    }\n\n    if (elements instanceof NodeList) {\n      elements = [].slice.call(elements);\n    }\n\n    if (!(elements instanceof Array)) {\n      return;\n    }\n\n    elements.forEach((element) => {\n      if (!(\"vanillaTilt\" in element)) {\n        element.vanillaTilt = new VanillaTilt(element, settings);\n      }\n    });\n  }\n}\n\nif (typeof document !== \"undefined\") {\n  /* expose the class to window */\n  window.VanillaTilt = VanillaTilt;\n\n  /**\n   * Auto load\n   */\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n}\n\nreturn VanillaTilt;\n\n}());\n"]},"metadata":{},"sourceType":"module"}